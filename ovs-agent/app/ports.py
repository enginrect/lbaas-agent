from typing import Protocol

class CommandRunner(Protocol):
    def __call__(self, argv: list[str], timeout: int = 10) -> str: ...

class OVNSouthboundPort(Protocol):
    def port_binding_find(self, container: str, neutron_port_id: str) -> str: ...
    def datapath_binding_find(self, container: str, datapath_uuid: str) -> str: ...
    def service_monitor_find(self, container: str, neutron_port_id: str) -> str: ...

class OVSBridgePort(Protocol):
    def dump_flows(self, container: str, of_version: str, bridge: str) -> str: ...
    def dump_flows_filter(self, container: str, of_version: str, bridge: str, match_filter: str) -> str: ...
    def add_flow(self, container: str, argv: list[str]) -> None: ...
    def del_flows_by_cookie(self, container: str, of_version: str, bridge: str, cookie: int) -> None: ...